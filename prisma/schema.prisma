generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(cuid())
  name     String
  email    String @unique
  password String
  role     Role
}

model Subject {
  id        String     @id @default(cuid())
  name      String
  code      String     @unique
  exams     Exam[]
  questions Question[]
}

model CO {
  id          String          @id @default(cuid())
  description String?
  examId      String
  name        Int
  exam        Exam            @relation(fields: [examId], references: [id])
  questions   Question[]
  studentCOs  StudentCOMark[]

  @@unique([name, examId])
}

model Exam {
  id        String     @id @default(cuid())
  name      ExamName
  subjectId String
  year      Int
  semester  Int
  cos       CO[]
  subject   Subject    @relation(fields: [subjectId], references: [id])
  questions Question[]

  @@unique([subjectId, name, year, semester])
}

model Question {
  id                   String                @id @default(cuid())
  text                 String?
  coId                 String?
  subjectId            String
  examId               String
  marks                Int
  pi                   String?
  option               String?
  subDivision          String?
  no                   Int
  bl                   String?
  co                   CO?                   @relation(fields: [coId], references: [id])
  exam                 Exam                  @relation(fields: [examId], references: [id])
  subject              Subject               @relation(fields: [subjectId], references: [id])
  studentQuestionMarks StudentQuestionMark[]

  @@unique([no, subDivision, option, examId])
}

model Student {
  id                   String                @id @default(cuid())
  name                 String
  rollNumber           String                @unique
  year                 Year
  sec                  String
  department           Department            @default(CSE)
  studentCOs           StudentCOMark[]
  studentQuestionMarks StudentQuestionMark[]
}

model StudentQuestionMark {
  id         String   @id @default(cuid())
  studentId  String
  questionId String
  mark       Int
  question   Question @relation(fields: [questionId], references: [id])
  student    Student  @relation(fields: [studentId], references: [id])

  @@unique([studentId, questionId])
}

model StudentCOMark {
  id        String  @id @default(cuid())
  studentId String
  coId      String
  coTotal   Int
  mark      Int
  co        CO      @relation(fields: [coId], references: [id])
  student   Student @relation(fields: [studentId], references: [id])

  @@unique([studentId, coId])
}

enum Role {
  faculty
  admin
}

enum ExamName {
  SerialTest1
  SerialTest2
  SerialTest3
  oddSem
  evenSem
  Assignment1
  Assignment2
  Assignment3
  Quiz1
  Quiz2
  CaseStudy1
  CaseStudy2
}

enum Year {
  I
  II
  III
  IV
}

enum Department {
  CSE
  IT
  MECH
  CIVIL
  BME
  EEE
  ECE
  AIDS
  CSBS
}
